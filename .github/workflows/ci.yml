name: "CI"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  rubocop:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@319066216501fbd5e2d568f14b7d68c19fb67a5d #v1.133.1
        with:
          bundler-cache: true
          ruby-version: 3.2.0
      - name: Install Bundler
        run: gem install bundler
      - name: Bundle Install
        run: bundle install
      - name: Rubocop
        run: bundle exec rubocop

  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        ruby_version: [2.7, 3.0, 3.1, 3.2]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@319066216501fbd5e2d568f14b7d68c19fb67a5d #v1.133.1
        with:
          bundler-cache: true
          ruby-version: ${{ matrix.ruby_version }}
      - name: Install Bundler
        run: gem install bundler
      - name: Setup Code Climate test-reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
      - name: Bundle Install
        run: bundle install
      - name: Test
        run: bundle exec rspec
      - name: Publish code coverage
        run: |
          # export GIT_BRANCH="${GITHUB_REF/refs\/heads\//}"
          ./cc-test-reporter after-build -r ${{secrets.CC_TEST_REPORTER_ID}}
      - name: Coveralls Parallel
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          flag-name: run-${{ matrix.ruby_version }}
          parallel: true

  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true
